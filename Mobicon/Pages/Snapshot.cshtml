@page
@using Models
@using Newtonsoft.Json
@model Mobicon.Pages.SnapshotModel
@{
    ViewData["Title"] = "Snapshot";
}


<form asp-route-id="@Model.Id" asp-page-handler="Compared">
    <select name="compareWithId" onchange="this.form.submit()">
        @if (Model.ComparedWithId == null)
        {
            <option selected>---</option>
        }
        else
        {
            <option>---</option>
        }

        @foreach (var snapshot in Model.Snapshots)
        {
            if (Model.ComparedWithId == snapshot.Id)
            {
                <option selected value="@snapshot.Id">@snapshot.Name</option>
            }
            else
            {
                <option value="@snapshot.Id">@snapshot.Name</option>
            }
        }
    </select>
</form>

<form method="post" asp-page-handler="export">
    <select name="exportFormat">
        <option value="@ExportFormat.Json">Json</option>
        <option value="@ExportFormat.Yaml">Yaml</option>
    </select>
    
    <button type="submit">Export</button>
</form>

<hr/>

<table>
    <thead class="table table-borderless">
        <tr>
            <th>Prefixes</th>
            <th>Key</th>
            <th>Value</th>
            <th>Type</th>
            <th>Description</th>
            <th>Jira</th>
        </tr>
    </thead>
    <tbody>
        @{
            foreach (var diff in Model.Entries.OrderBy(e => e.Entry.Key))
            {
                var entry = diff.Entry;
                <tr data="@JsonConvert.SerializeObject(entry)"
                    class="@(diff.Difference == Difference.Added ? "table-success"
                           : diff.Difference == Difference.Removed ? "table-danger" 
                           : diff.Difference == Difference.Changed ? "table-warning" 
                           : "")">
                   
                    <td>
                        @string.Join(", ", entry.SimplePrefixes.Select(e => e.SimplePrefix.Name))
                        @{
                            if (entry.VersionPrefix != null)
                            {
                                Write($"({entry.VersionPrefix.From} - {entry.VersionPrefix.To})");
                            }

                            if (entry.SegmentPrefix != null)
                            {
                                Write($"<{entry.SegmentPrefix.From} .. {entry.SegmentPrefix.To}>");
                            }
                        }
                    </td>
                    <td>@entry.Key</td>
                    @switch (entry.Type)
                    {
                        case FieldType.String:
                        case FieldType.Integer:
                        case FieldType.Float:
                        case FieldType.Bool:
                            <td>@entry.Value</td>
                            break;
                        case FieldType.ListOfBool:
                        case FieldType.ListOfString:
                        case FieldType.ListOfInteger:
                        case FieldType.ListOfFloat:
                            <td>@entry.Value</td>
                            break;
                        default:
                            <td>Unknown</td>
                            break;
                    }
                    <td>@entry.Type</td>
                    <td>@entry.Description</td>
                    <td><a href="https://jira.playtika.com/browse/@entry.Jira">@entry.Jira</a></td>
                </tr>
            }
        }
    </tbody>
</table>

