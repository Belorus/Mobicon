@page
@using Humanizer
@using Models
@using Newtonsoft.Json
@model Mobicon.Pages.SnapshotModel
@{
    ViewData["Title"] = Model.Name;
}

<style>
    .value-cell {
        font-family: monospace;
        font-weight: bold;
        font-size: 16px;
    }
    .compare-label {
        margin-right: 8px;
        margin-bottom: 0;
    }
    .export-dropdown, .delete-snapshot-btn {
        margin-left: 36px;
    }
    .approves-block {
        border-radius: 3px;
        padding: 4px 10px;
        box-shadow: 0px 0px 3px -1px;
        margin-right: 36px;
    }
    .compare-select {
        width: 200px;
    }
    .badge-info {
        font-size: 16px;
    }
    .approve-btn {
        margin-left: 16px;
    }
    .tooltip {
        width: auto !important;
    }
    .tooltip-inner {
        max-width: none;
    }
    .tooltip-row {
        margin: 0;
        padding: 4px 12px;
        white-space: nowrap;
    }
    .table {
        table-layout:fixed;
    }
    tr.versions-table td {
        display: none;
    }
    tr.show-versions + tr.versions-table td {
        display: table-cell;
        border-top: 0;
    }
    .select-version-btn {
        display: none;
        position: absolute;
        right: 10px;
        top: 3px;
    }
    tr.version-row:hover .select-version-btn {
        display: inline-block;
    }
    .select-version-wrapper {
        position: relative;
    }
    .show-versions-trigger {
        text-decoration: underline;
        cursor: pointer;
        user-select: none;
    }
    tr.show-versions .versions-arrow{
        transform: rotate(-180deg);
    }
    .versions-arrow {
        transition: transform ease-in-out 0.2s;
    }
    .show-versions-trigger:hover {
        opacity: 0.8;
    }
    .delete-entry-btn {
        position: absolute;
        right: 5px;
        top: 8px;
    }
    .delete-entry-wrapper {
        position: relative;
    }
    .delete-entry-wrapper .btn {
        display: none;
    }
    tr.show-versions .delete-entry-wrapper .btn, tr:hover .delete-entry-wrapper .btn {
        display: inline-block;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function() { 
        $('#compareSelect').selectpicker();
        $('[data-toggle="tooltip"]').tooltip();
    });

    function showTableVersions(element) {
        $(element.parentNode.parentNode).toggleClass('show-versions');
    }

    function onDeleteEntry(uniqueId) {
        $('#deleteEntryId').val(uniqueId);
        $('#deleteEntryModal').modal('show');
    }
    
    function onDeleteSnapshot(uniqueId) {
        $('#deleteSnapshotModal').modal('show');
    }
    
    function formatEntryValue(value, type) {
        try {
            if (type === 'list') {
                var list = JSON.parse(value);
                if (list === undefined || list.length === 0) {
                    document.write('[]');
                } else {
                    document.write("<ul>");
                    for (var item of list) {
                        document.write("<li>");
                        document.write(item);
                        document.write("</li>");
                    }
                    document.write("</ul>");
                }
            }
            if (type === 'simple') {
                var obj = JSON.parse(value);
                document.write(obj);
            }
        }
        catch(e) {
            document.write('<i class="fas fa-exclamation-circle"></i> ');
            document.write('<span class="text-danger">' + value + '</span>');
        }

    }
</script>

<!-- Delete Entry Modal -->
<div class="modal" id="deleteEntryModal" tabindex="-1" role="dialog" aria-labelledby="deleteEntry" aria-hidden="true">
    <form method="post" asp-page-handler="deleteEntry" asp-route-id="@Model.Id" class="form-inline">
        <div class="modal-dialog modal-lg delete-confirmation-modal" role="document">
            <input type="hidden" name="entryUniqueId" id="deleteEntryId"/>

            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete confirmation</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure want to delete entry?</p>
                    <p>This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </form>
</div>

<!-- Delete Snapshot Modal -->
<div class="modal" id="deleteSnapshotModal" tabindex="-1" role="dialog" aria-labelledby="deleteSnapshotModal" aria-hidden="true">
    <form method="post" asp-route-id="@Model.Id" asp-page-handler="delete" class="form-inline">
        <div class="modal-dialog modal-lg delete-confirmation-modal" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete confirmation</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure want to delete snapshot?</p>
                    <p>This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </form>
</div>


<div class="d-flex justify-content-between align-items-center view-header">
    <h2>@Model.Name</h2>
    <span>@Model.Description</span>
    <div class="d-flex controls-section">
        <div class="d-flex align-items-center approves-block" data-toggle="tooltip" data-html="true" title="@(string.Join("", Model.Approves.Select(a => $"<p class=\"tooltip-row\">{a.Username} | {a.ApprovedAt}</p>")))">
            <span>Approves: <span class="badge badge-info"> @Model.Approves.Length / @Model.ApprovesToPublish</span></span>

               @if (User.IsInRole(UserRole.Approver.ToString()) || User.IsInRole(UserRole.Admin.ToString()))
               {
                   if (Model.Status == SnapshotStatus.WaitingForApprove)
                   {
                       if (Model.Approves.All(a => a.Username != User.Identity.Name))
                       {
                           <form method="post" asp-page-handler="approve"
                                 asp-route-id="@Model.Id">
                               <button class="btn btn-success btn-sm approve-btn" type="submit"><i class="fas fa-thumbs-up"></i> Approve</button>
                           </form>
                       }
                       else
                       {
                           <form method="post" asp-page-handler="disapprove"
                                 asp-route-id="@Model.Id">
                               <button class="btn btn-danger btn-sm approve-btn" type="submit"><i class="fas fa-thumbs-down"></i> Disapprove</button>
                           </form>
                       }
                   }
               }
        </div>
        <div class="d-flex align-items-center">
            <label class="compare-label">Compare with: </label>
            <form asp-route-id="@Model.Id" asp-page-handler="Compared">
                <select class="form-control compare-select" name="compareWithId" data-size="8" data-width="200px" id="compareSelect" title="Snapshot to compare" onchange="this.form.submit()">
                   
                    <option>don't compare</option>
                    <option value="-1">with current configs</option>

                    @foreach (var snapshot in Model.Snapshots)
                    {
                        <option value="@snapshot.Id">@snapshot.Name</option>
                    }
                </select>
            </form>
        </div>
        <div class="dropdown export-dropdown">
            <button class="btn btn-primary dropdown-toggle" type="button" id="exportMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-file-export"></i> Export snapshot
            </button>
            <div class="dropdown-menu" aria-labelledby="exportMenuButton">
                <form asp-route-id="@Model.Id" method="post" asp-page-handler="export">
                    <input type="hidden" name="exportFormat" value="@ExportFormat.Json">
                    <button class="dropdown-item" type="submit">JSON</button>
                </form>
                <form asp-route-id="@Model.Id" method="post" asp-page-handler="export">
                    <input type="hidden" name="exportFormat" value="@ExportFormat.Yaml">
                    <button class="dropdown-item" type="submit">YAML</button>
                </form>
            </div>
        </div>
        @if (User.IsInRole(UserRole.Admin.ToString()) && Model.Status != SnapshotStatus.Published)
        {
            <button onclick="onDeleteSnapshot()"  class="btn btn-danger delete-snapshot-btn"><i class="fas fa-trash-alt"></i> Delete snapshot</button>
        }
    </div>
</div>

@if (Model.Entries.Length > 0)
{
    <div class="items-list">
        <table class="table">
            <thead>
            <tr>
                @if (Model.ComparedWithId != null)
                {
                    <th width="15%">Changed</th>
                }

                <th width="10%">Prefixes</th>
                <th width="25%">Key</th>
                <th width="25%">Value</th>
                <th width="20%">Description</th>
                <th width="10%">Jira</th>
                <th width="40"></th>
            </tr>
            </thead>
            <tbody>
                @{
                    foreach (var diff in Model.Entries.OrderBy(e => e.Entry.Key).ThenBy(e => e.Entry.SimplePrefixes.Count))
                    {
                        var entry = diff.Entry;
                <tr class="@(diff.Difference == Difference.Added ? "table-success"
                                     : diff.Difference == Difference.Removed ? "table-danger"
                                         : diff.Difference == Difference.Changed ? "table-warning"
                                             : "")">

                    @if (Model.ComparedWithId != null)
                    {
                        <td>
                            @if (diff.Difference != Difference.None)
                            {
                                <span>by <b>@diff.Entry.VersionCreatedBy</b> @diff.Entry.VersionCreateTime.ToUniversalTime().Humanize() </span>
                            }
                        </td>
                    }

                    <td>
                        @string.Join(", ", entry.SimplePrefixes.Select(e => e.SimplePrefix.Name))
                        @{
                            if ((entry.VersionPrefixFrom ?? entry.VersionPrefixTo) != null)
                            {
                                Write($"({entry.VersionPrefixFrom} - {entry.VersionPrefixTo})");
                            }

                            if ((entry.SegmentPrefixFrom ?? entry.SegmentPrefixTo) != null)
                            {
                                Write($"<{entry.SegmentPrefixFrom} .. {entry.SegmentPrefixTo}>");
                            }
                        }
                    </td>
                    <td class="key-cell">
                        @entry.Key
                        <sup onclick="showTableVersions(this)" class="text-info @(User.IsInRole(UserRole.Editor.ToString()) &&Model.Status != SnapshotStatus.Published && diff.EntryVersions.Length > 0 ? "show-versions-trigger" : "")">
                            ver. @entry.Version
                            @if (User.IsInRole(UserRole.Editor.ToString()) && Model.Status != SnapshotStatus.Published && diff.EntryVersions.Length > 0)
                            {<i class="fas fa-angle-down versions-arrow"></i>}
                        </sup>
                    </td>
                    @switch (entry.Type)
                    {
                        case FieldType.String:
                        case FieldType.Integer:
                        case FieldType.Float:
                        case FieldType.Bool:
                            <td class="value-cell">
                                <script>
                                    formatEntryValue('@Html.Raw(entry.Value)', 'simple');
                                </script>
                            </td>
                            break;
                        case FieldType.ListOfBool:
                        case FieldType.ListOfString:
                        case FieldType.ListOfInteger:
                        case FieldType.ListOfFloat:
                            <td class="value-cell">
                                <script>
                                    formatEntryValue('@Html.Raw(entry.Value)', 'list');
                                </script>
                            </td>

                            break;
                        default:
                            <td>Unknown</td>
                            break;
                    }
                    <td>@entry.Description</td>
                    <td><a href="https://jira.playtika.com/browse/@entry.Jira">@entry.Jira</a></td>
                    <td class="delete-entry-wrapper">
                        @if (User.IsInRole(UserRole.Editor.ToString()) && Model.Status != SnapshotStatus.Published)
                        {
                            <button onclick="onDeleteEntry(@entry.Id)" class="delete-entry-btn btn btn-outline-danger btn-sm"><i onclick="onDeleteEntry(@entry.Id)" class="fas fa-trash-alt"></i></button>
                        }
                    </td>
                </tr>

                        if (Model.Status != SnapshotStatus.Published && diff.EntryVersions.Length > 0)
                        {
                            <tr class="versions-table">
                                <td colspan="6">
                                        <table class="table table-hover table-sm table-bordered">
                                            <thead class="thead-light">
                                            <tr>
                                                <th width="150px">Version</th>
                                                <th width="25%">Changed by</th>
                                                <th width="30%">Value</th>
                                                <th width="20%">Description</th>
                                                <th width="15%">Jira</th>
                                            </tr>
                                            </thead>
                                            <tbody>
                                            @foreach (var sub in diff.EntryVersions.OrderByDescending(v => v.Version))
                                            {
                                                <tr class="version-row">
                                                    <td class="select-version-wrapper"><span>@sub.Version</span>
                                                        <form asp-page-handler="updateEntry" method="post" asp-route-id="@Model.Id" asp-route-entryId="@sub.EntryId" asp-route-version="@sub.Version">
                                                            <button class="btn btn-primary btn-sm select-version-btn" type="submit"><i class="fas fa-exchange-alt"></i> Select</button>
                                                        </form>
                                                    </td>
                                                    <td>by <b>@sub.VersionCreatedBy</b> @sub.VersionCreateTime.ToUniversalTime().Humanize()</td>
                                                    @switch (sub.Type)
                                                    {
                                                        case FieldType.String:
                                                        case FieldType.Integer:
                                                        case FieldType.Float:
                                                        case FieldType.Bool:
                                                            <td class="value-cell">
                                                                <script>
                                                                    formatEntryValue('@Html.Raw(sub.Value)', 'simple');
                                                                </script>
                                                            </td>
                                                            break;
                                                        case FieldType.ListOfBool:
                                                        case FieldType.ListOfString:
                                                        case FieldType.ListOfInteger:
                                                        case FieldType.ListOfFloat:
                                                            <td class="value-cell">
                                                                <script>
                                                                    formatEntryValue('@Html.Raw(sub.Value)', 'list');
                                                                </script>
                                                            </td>

                                                            break;
                                                        default:
                                                            <td>Unknown</td>
                                                            break;
                                                    }
                                                    <td>@sub.Description</td>
                                                    <td>@sub.Jira</td>
                                                </tr>
                                            }
                                            </tbody>
                                        </table>
                                </td>
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="empty-data">
        <img src="no_data.png"/>
    </div>
}

