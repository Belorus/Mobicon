@page
@model Mobicon.Pages.SegmentsModel
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewData["Title"] = "Segments";
}

<div class="d-flex justify-content-between align-items-center">
    <h2>Segments <span class="badge badge-info">@Model.Segments.Length</span></h2>
    <form method="post" class="d-flex justify-content-end">
        <div class="input-group add-list-item">
            <input type="text" name="segmentName" required placeholder="Enter segment name" class="form-control">
            <div class="input-group-append">
                <button class="btn btn-primary" type="submit"><i class="fas fa-plus"></i> Add segment</button>
            </div>
        </div>
    </form>
</div>

<div class="list-group items-list">
    @{
        foreach (var segment in Model.Segments.OrderByDescending(x => x.CreatedAt))
        {
            <a  class="list-group-item list-group-item-action" href="/Segment?id=@segment.Id">
                <span class="text-primary">@segment.Name</span>
                @if (segment.Configs.Count > 0)
                {
                    <span>with configs:</span>
                    <div class="d-inline-block text-secondary">
                        @{
                            int i = 0;
                            int configPreviewCount = segment.Configs.Count < 5 ? segment.Configs.Count : 5;
                        }
                        @foreach (var c in segment.Configs.OrderByDescending(x => x.CreatedAt).Take(configPreviewCount))
                        {
                            i++;
                            if(i < configPreviewCount) { <span>@c.Name,</span> } else { <span>@c.Name</span>}
                        }
                    </div>
                    if (segment.Configs.Count > configPreviewCount)
                     {
                         <span class="text-secondary"> and @(segment.Configs.Count - configPreviewCount) more...</span>
                     }
                }
                else
                {
                    <span class="text-secondary">without configs</span>
                }

            </a>
        }
    }
</div>