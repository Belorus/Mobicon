@page
@using Humanizer
@using Mobicon.Models
@model Mobicon.Pages.ConfigsModel
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewData["Title"] = "Configs";
}

<style>
    .import-form {
        margin-right: 36px;
    }
    .add-list-item {
        width: 350px;
    }
    .collapse-wrapper {
        padding: 24px;
    }
    .card-header {
        text-decoration: none !important;
        border-bottom: 0;
        position: relative;
        transition: background-color linear 0.3s;
    }
    .card-header .delete-form {
        position: absolute;
        right: 24px;
        top: 9px;
        opacity: 0;
        transition: opacity linear 0.3s;
    }
    .card-header[aria-expanded="true"] {
        background-color: rgb(240, 248, 255);
        border-bottom: 1px solid rgba(0, 0, 0, 0.125);
    }
    .card-header[aria-expanded="true"] .delete-form {
        opacity: 1;
    }
    .list-group-item {
        padding: 8px 14px;
        font-size: 15px;
    }
    .modal-body {
        width: 500px;
    }
    .import-config-entries {
        margin-top: 24px;
        max-height: 400px;
    }
</style>

<script>
    function onImportClick(segmentId) {
        $('#importSegmentId').val(segmentId);
        $('#importModal').modal('show');
    }
    
    function onDeleteClick(event, segmentId) {
        event.stopPropagation();
        $('#deleteSegmentId').val(segmentId);
        $('#deleteModal').modal('show');
    }
</script>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteSegment" aria-hidden="true">
    <form method="post" asp-page-handler="delete" asp-route-id="" class="form-inline">
        <div class="modal-dialog modal-lg delete-confirmation-modal" role="document">
            <input type="hidden" name="id" id="deleteSegmentId"/>

            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteSegment">Delete confirmation</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure want to delete <span class="text-primary"> </span>segment?</p>
                    <p>This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>
    </form>
</div>

<div class="modal fade" id="importModal" tabindex="-1" role="dialog" aria-labelledby="importConfig" aria-hidden="true">
    <form method="post" asp-page-handler="import" class="form-inline">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <input type="hidden" name="id" id="importSegmentId"/>
                <div class="modal-header">
                    <h5 class="modal-title" id="importConfig">Import Config</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body d-flex flex-column">
                    <input required type="text" class="form-control" name="name" placeholder="Enter config name">
                    <input type="hidden" name="id" value="@Model.Request.Query["id"]">
                    <textarea required placeholder="Enter config data" class="form-control import-config-entries" rows="7" name="data"></textarea>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Import</button>
                </div>
            </div>
        </div>
    </form>
</div>


@if (User.IsInRole(UserRole.Admin.ToString()))
{
    <div class="d-flex justify-content-between align-items-center">
        <h2>Configs</h2>
        <form method="post" class="d-flex justify-content-end controls-section">
            <div class="input-group add-list-item">
                <input type="text" name="segmentName" required placeholder="Enter segment name" class="form-control">
                <div class="input-group-append">
                    <button class="btn btn-primary" type="submit"><i class="fas fa-plus"></i> Add segment</button>
                </div>
            </div>
        </form>
    </div>
}

@if (Model.Segments.Length > 0)
{
    <div id="accordion" class="items-list accordion">
        @{
            foreach (var segment in Model.Segments.OrderBy(x => x.Name))
            {
                <div class="card">
                    <a class="card-header" data-toggle="collapse" href="#@segment.Id">
                        <span class="text-primary">@segment.Name</span>
                        <buton class="btn btn-outline-danger delete-form btn-sm" onclick="onDeleteClick(event, @segment.Id)"><i class="fas fa-trash-alt"></i> Delete segment</buton>
                    </a>
                    <div class="collapse" id="@segment.Id" class="collapse" data-parent="#accordion">
                        <div class="collapse-wrapper">
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="d-flex">
                                    <buton class="btn btn-success import-form btn-sm" onclick="onImportClick(@segment.Id)"><i class="fas fa-file-import"></i> Import config</buton>
                                    <form method="post" asp-page-handler="addConfig" asp-route-id="@segment.Id" class="d-flex justify-content-end">
                                        <div class="input-group add-list-item input-group-sm">
                                            <input type="text" name="configName" required placeholder="Enter config name" class="form-control config-name">
                                            <div class="input-group-append">
                                                <button class="btn btn-primary" type="submit"><i class="fas fa-plus"></i> Add config</button>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                            @if (segment.Configs.Any(c => !c.IsDeleted))
                            {
                                <div class="list-group items-list list-group-flush">
                                    @{
                                        foreach (var config in segment.Configs.Where(c => !c.IsDeleted).OrderBy(x => x.Name))
                                        {
                                            <a class="list-group-item list-group-item-action" href="/Config?id=@config.Id">
                                                <span class="text-primary">@config.Name</span>
                                                <span>updated by <b>@config.UpdatedBy</b> @config.UpdatedAt.ToUniversalTime().Humanize()</span>
                                            </a>
                                        }
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>
}
else
{
    <div class="empty-data">
        <img src="no_data.png"/>
    </div>
}


