@page
@using Models
@using Newtonsoft.Json
@model Mobicon.Pages.ConfigModel
@{
    ViewData["Title"] = "Config";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<script>
    function onEditClick(data) {
        var obj = JSON.parse(data);

        $('input[name="entryId"]').val(obj.Id);
        $('input[name="key"]').val(obj.Key)
            .prop('disabled', true);
        $('input[name="value"]').val(obj.Value);
        $('input[name="description"]').val(obj.Description);
        $('input[name="jira"]').val(obj.Jira);
        $('select[name="type"]').val(obj.Type);
        
        $('input[name="versionFrom"]').val(obj.VersionPrefixFrom);
        $('input[name="versionTo"]').val(obj.VersionPrefixTo);
        $('input[name="segmentFrom"]').val(obj.SegmentPrefixFrom);
        $('input[name="segmentTo"]').val(obj.SegmentPrefixTo);
        $('#addEditEntryModalTitle').text('Edit entry');
        $('#addEditEntryModalSubmitBtn').text('Save');

        $('#additionalEntryFields').hide();

        $('#addEditModal').modal('show');
    }

    function onDeleteClick(data) {
        var obj = JSON.parse(data);

        $('input[name="entryId"]').val(obj.Id);

        $('#deleteModal').modal('show');
    }

    function onAddClick() {
        $('input[name="entryId"]').val('');
        $('input[name="key"]').val('').prop('disabled', false);
        $('input[name="value"]').val('');
        $('input[name="description"]').val('');
        $('input[name="jira"]').val('');
        $('select[name="type"]').val(1);
        $('input[name="versionFrom"]').val('');
        $('input[name="versionTo"]').val('');
        $('input[name="segmentFrom"]').val('');
        $('input[name="segmentTo"]').val('');
        $('#addEditEntryModalTitle').text('Create entry');
        $('#addEditEntryModalSubmitBtn').text('Create');

        $('#additionalEntryFields').show();
        $('#simplePrefixSelect').multiselect();

        $('#addEditModal').modal('show');
    }
</script>


<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteEntry" aria-hidden="true">
    <form method="post" asp-page-handler="delete" class="form-inline"
          asp-route-id="@Model.Id">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteEntry">Delete confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure want to delete entry?</p>
                <p>This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <input type="hidden" class="form-control mb-2 mr-sm-2" name="entryId">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
    </form>
</div>

<!-- Add/Edit Modal -->
<div class="modal fade" id="addEditModal" tabindex="-1" role="dialog" aria-labelledby="addEditEntryModal" aria-hidden="true">
    <form method="post" class="form-inline">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addEditEntryModalTitle"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body d-flex flex-column add-edit-modal-body">
                    <input type="hidden" class="form-control" name="entryId">
                    <div class="d-flex fields-row">
                        <input required type="text" class="form-control fields-row-item w-100" name="key" placeholder="Key">
                    </div>
                    <div class="d-flex fields-row">
                        <input required type="text" class="form-control fields-row-item w-75" name="value" placeholder="Value">
                        <select placeholder="Type" required class="form-control fields-row-item w-25" name="type">
                            @foreach (var type in Model.FieldTypes)
                            {
                                <option value="@((int)type)">@type</option>
                            }
                        </select>
                    </div>
                    <div class="d-flex fields-row">
                        <input type="text" class="form-control fields-row-item w-75" name="description" placeholder="Description">
                        <input type="text" class="form-control fields-row-item w-25" name="jira" placeholder="Jira">
                    </div>
                    

                    <div class="flex-column" id="additionalEntryFields">
                        <div id="versionGroup" class="input-group">
                            <div class="input-group-prepend">
                                <div class="input-group-text">
                                    <input type="checkbox"
                                           data-toggle='collapse' data-target='#versionBlock'
                                           id="versionCheck">
                                    <label for="versionCheck">For version</label>
                                </div>
                            </div>
                            <div id="versionBlock" class="collapse">
                                <input type="text" class="form-control" name="versionFrom" placeholder="From version">
                                <input type="text" class="form-control" name="versionTo" placeholder="To version">
                            </div>
                        </div>
    
                        <div id="segmentGroup" class="input-group">
                            <div class="input-group-prepend">
                                <div class="input-group-text">
                                    <input type="checkbox"
                                           data-toggle='collapse' data-target='#segmentBlock'
                                           id="segmentCheck">
                                    <label for="segmentCheck">For segment</label>
                                </div>
                            </div>
                            <div id="segmentBlock" class="collapse">
                                <input type="text" class="form-control" name="segmentFrom" placeholder="From segment">
                                <input type="text" class="form-control" name="segmentTo" placeholder="To segment">
                            </div>
                        </div>
                        <div>
                            <select name="simplePrefixes" id="simplePrefixSelect" asp-items="@(new SelectList(Model.SimplePrefixes, "Id", "Name"))" multiple="multiple"></select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button id="addEditEntryModalSubmitBtn" type="submit" class="btn btn-primary"></button>
                </div>

            </div>
        </div>
    </form>
    
    <style>
        #additionalEntryFields {
            display: flex;
        }
        .fields-row-item + .fields-row-item {
            margin-left: 16px;
        }
        #additionalEntryFields, .fields-row + .fields-row {
            margin-top: 24px;
        }
        .add-edit-modal-body {
            width: 600px;
        }
    </style>
</div>

<div class="d-flex justify-content-between align-items-center">
    <h2>@Model.Name entries <span class="badge badge-info">@Model.Entries.Length</span></h2>
    <div class="d-flex">
        <buton class="btn btn-primary" onclick="onAddClick()">Create entry</buton>
    </div>
</div>
<div class="items-list">
<table class="table table-hover">
    <thead>
    <tr>
        <th width="10%">Prefixes</th>
        <th width="25%">Key</th>
        <th width="25%">Value</th>
        <th width="10%">Type</th>
        <th width="20%">Description</th>
        <th width="10%">Jira</th>
        <th width="160"></th>
    </tr>
    </thead>
    <tbody>
    @{
        foreach (var entry in Model.Entries)
        {
            <tr data="@JsonConvert.SerializeObject(entry)">
                <td>
                    @string.Join(", ", entry.SimplePrefixes.Select(e => e.SimplePrefix.Name))
                    @{
                        if ((entry.VersionPrefixFrom ?? entry.VersionPrefixTo) != null)
                        {
                            Write($"({entry.VersionPrefixFrom} - {entry.VersionPrefixTo})");
                        }

                        if ((entry.SegmentPrefixFrom ?? entry.SegmentPrefixTo) != null)
                        {
                            Write($"<{entry.SegmentPrefixFrom} .. {entry.SegmentPrefixTo}>");
                        }
                    }
                </td>
                <td>
                <div>@entry.Key</div></td>
                @switch (entry.Type)
                {
                    case FieldType.String:
                    case FieldType.Integer:
                    case FieldType.Float:
                    case FieldType.Bool:
                        <td>@entry.Value</td>
                        break;
                    case FieldType.ListOfBool:
                    case FieldType.ListOfString:
                    case FieldType.ListOfInteger:
                    case FieldType.ListOfFloat:
                        <td>@entry.Value</td>
                        break;
                    default:
                        <td>Unknown</td>
                        break;
                }
                <td>@entry.Type</td>
                <td>@entry.Description</td>
                <td><a href="https://jira.playtika.com/browse/@entry.Jira">@entry.Jira</a></td>
                <td class="row-actions-td">
                    <div class="row-actions d-flex justify-content-between">
                        <button type="button" class="btn btn-outline-info btn-sm" onclick="onEditClick($(this).closest('tr').attr('data'))"><i class="fas fa-edit"></i> Edit</button>
                        <button type="button" class="btn btn-outline-danger btn-sm" onclick="onDeleteClick($(this).closest('tr').attr('data'))"><i class="fas fa-trash-alt"></i> Delete</button>
                    </div>
                </td>
            </tr>
        }
    }
    </tbody>
</table>
</div>

<style>
    .table {
        table-layout:fixed;
    }

    .table td {
        word-break: break-all;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .row-actions-td {
        position: relative;
    }
  
    .row-actions {
        visibility: hidden;
        position: absolute;
        top: 9px;
        right: 5px;
        width: 145px;
    }

    table tr:hover .row-actions {
        visibility: initial;
    }
</style>